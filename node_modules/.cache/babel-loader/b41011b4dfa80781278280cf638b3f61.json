{"ast":null,"code":"var _jsxFileName = \"/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/ChartTemperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ApexCharts from 'apexcharts';\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartTemperature() {\n  _s();\n\n  const {\n    weatherNextDays\n  } = useSelector(state => state.WeatherReducer);\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let mangdate = [];\n  let mangWeather = [];\n  let mangTemp = [];\n\n  if (weatherNextDays) {\n    weatherNextDays.list.map((weather, index) => {\n      if (weather.dt_txt.slice(11) == \"12:00:00\") {\n        // PUSH DATE\n        const DATE = new Date(weather.dt_txt);\n        const date = String(DATE.getDate()).padStart(2, '0');\n        const monthLetter = monthNames[DATE.getMonth()];\n        const dateText = `${date} ${monthLetter}`;\n        mangdate.push(dateText); // PUSH MANG WEATHER\n\n        mangWeather.push(weather); // PUSH TEMP VALUE\n\n        mangTemp.push(Math.round(Number(weather.main.temp) - 273.15));\n      }\n    });\n  }\n\n  let series = [{\n    name: \"TEMPERATURE\",\n    data: mangTemp\n  }];\n  let options = {\n    // chart: {\n    //   id: \"basic-bar\"\n    // },\n    xaxis: {\n      categories: mangdate\n    },\n    chart: {\n      type: 'area',\n      height: 350,\n      zoom: {\n        enabled: true\n      }\n    },\n    dataLabels: {\n      enabled: true\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    title: {\n      text: 'Unit: 째C',\n      align: 'left'\n    },\n    subtitle: {\n      text: 'Comparison data at 12:00:00 on each day',\n      align: 'left'\n    },\n    // labels: series.temperature.dates,\n    yaxis: {\n      opposite: true\n    },\n    legend: {\n      horizontalAlign: 'right'\n    },\n    colors: ['#2E93fA']\n  }; // var options = {\n  //     series: [{\n  //         name: \"TEMPERATURE\",\n  //         data: serieData.temperature.value\n  //     }],\n  //     chart: {\n  //         type: 'area',\n  //         height: 350,\n  //         zoom: {\n  //             enabled: true\n  //         }\n  //     },\n  //     dataLabels: {\n  //         enabled: true\n  //     },\n  //     stroke: {\n  //         curve: 'smooth'\n  //     },\n  //     title: {\n  //         text: 'Unit: 째C',\n  //         align: 'left'\n  //     },\n  //     subtitle: {\n  //         text: 'Comparison data at 12:00:00 on each day',\n  //         align: 'left'\n  //     },\n  //     labels: series.temperature.dates,\n  //     yaxis: {\n  //         opposite: true\n  //     },\n  //     legend: {\n  //         horizontalAlign: 'right'\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: weatherNextDays ? /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartTemperature, \"eX97CGFtmZBKJI38g7WNDwThAVg=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChartTemperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartTemperature\");","map":{"version":3,"sources":["/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/ChartTemperature.js"],"names":["React","Fragment","useEffect","useSelector","ApexCharts","Chart","ChartTemperature","weatherNextDays","state","WeatherReducer","monthNames","mangdate","mangWeather","mangTemp","list","map","weather","index","dt_txt","slice","DATE","Date","date","String","getDate","padStart","monthLetter","getMonth","dateText","push","Math","round","Number","main","temp","series","name","data","options","xaxis","categories","chart","type","height","zoom","enabled","dataLabels","stroke","curve","title","text","align","subtitle","yaxis","opposite","legend","horizontalAlign","colors"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport ApexCharts from 'apexcharts';\nimport Chart from \"react-apexcharts\";\n\nexport default function ChartTemperature() {\n\n    const { weatherNextDays } = useSelector(state => state.WeatherReducer)\n\n\n\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n  \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n        \n\n\n\n    let mangdate = [];\n    let mangWeather = [];\n    let mangTemp = [];\n\n\n    if (weatherNextDays) {\n\n        weatherNextDays.list.map((weather,index) => {\n        \n            if (weather.dt_txt.slice(11) == \"12:00:00\") {\n              // PUSH DATE\n              const DATE = new Date(weather.dt_txt)\n              const date = String(DATE.getDate()).padStart(2, '0');\n              const monthLetter = monthNames[DATE.getMonth()]\n              const dateText = `${date} ${monthLetter}`\n              mangdate.push(dateText)\n    \n    \n              // PUSH MANG WEATHER\n              mangWeather.push(weather)\n    \n              // PUSH TEMP VALUE\n              mangTemp.push(Math.round(Number(weather.main.temp) - 273.15))\n            }\n    \n          });\n    \n    }\n\n\n    let series = [\n        {\n            name: \"TEMPERATURE\",\n            data: mangTemp\n        }\n    ]\n\n\n        let options = {\n            // chart: {\n            //   id: \"basic-bar\"\n            // },\n            xaxis: {\n              categories: mangdate\n            },\n            chart: {\n                type: 'area',\n                height: 350,\n                zoom: {\n                    enabled: true\n                }\n            },\n            dataLabels: {\n                enabled: true\n            },\n            stroke: {\n                curve: 'smooth'\n            },\n            title: {\n                text: 'Unit: 째C',\n                align: 'left'\n            },\n            subtitle: {\n                text: 'Comparison data at 12:00:00 on each day',\n                align: 'left'\n            },\n            // labels: series.temperature.dates,\n    \n            yaxis: {\n                opposite: true\n            },\n            legend: {\n                horizontalAlign: 'right'\n            },\n\n            colors: ['#2E93fA']\n          };\n        \n\n\n       \n    \n        // var options = {\n        //     series: [{\n        //         name: \"TEMPERATURE\",\n        //         data: serieData.temperature.value\n        //     }],\n        //     chart: {\n        //         type: 'area',\n        //         height: 350,\n        //         zoom: {\n        //             enabled: true\n        //         }\n        //     },\n        //     dataLabels: {\n        //         enabled: true\n        //     },\n        //     stroke: {\n        //         curve: 'smooth'\n        //     },\n        //     title: {\n        //         text: 'Unit: 째C',\n        //         align: 'left'\n        //     },\n        //     subtitle: {\n        //         text: 'Comparison data at 12:00:00 on each day',\n        //         align: 'left'\n        //     },\n        //     labels: series.temperature.dates,\n    \n        //     yaxis: {\n        //         opposite: true\n        //     },\n        //     legend: {\n        //         horizontalAlign: 'right'\n        //     }\n        // };\n\n\n\n    return (\n        <Fragment>\n            { weatherNextDays ? <Chart \n                options={options}\n                series={series}\n            /> : \"\"}\n        </Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}