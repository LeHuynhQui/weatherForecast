{"ast":null,"code":"var _jsxFileName = \"/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/Nextday.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nextday() {\n  _s();\n\n  const {\n    weatherNextDays\n  } = useSelector(state => state.WeatherReducer);\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let mangWeather = [];\n\n  if (weatherNextDays) {\n    weatherNextDays.list.map((weather, index) => {\n      if (weather.dt_txt.slice(11) == \"12:00:00\") {\n        // // PUSH DATE\n        // const DATE = new Date(weather.dt_txt)\n        // const date = String(DATE.getDate()).padStart(2, '0');\n        // const monthLetter = monthNames[DATE.getMonth()]\n        // const dateText = `${date} ${monthLetter}`\n        // mangdate.push(dateText)\n        // PUSH MANG WEATHER\n        mangWeather.push(weather);\n      }\n    });\n  }\n\n  const renderNextday = () => {\n    return mangWeather.map((weather, index) => {\n      const DATE = new Date(weather.dt_txt);\n      const date = String(DATE.getDate()).padStart(2, '0');\n      const monthLetter = monthNames[DATE.getMonth()];\n      const dateText = `${date} ${monthLetter}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item today glass text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"change-date\",\n          children: dateText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png\",\n            width: \"50px\",\n            alt: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-3\",\n          children: \"Temperature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [Math.round(Number(weather.main.temp) - 273.15), /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [weatherNextDays ? renderNextday() : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next-day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Nextday, \"eX97CGFtmZBKJI38g7WNDwThAVg=\", false, function () {\n  return [useSelector];\n});\n\n_c = Nextday;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nextday\");","map":{"version":3,"sources":["/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/Nextday.js"],"names":["React","useSelector","Nextday","weatherNextDays","state","WeatherReducer","monthNames","mangWeather","list","map","weather","index","dt_txt","slice","push","renderNextday","DATE","Date","date","String","getDate","padStart","monthLetter","getMonth","dateText","Math","round","Number","main","temp"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAsBF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAAvC;AAEA,QAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EACf,KADe,EACR,KADQ,EACD,KADC,EACM,KADN,EACa,KADb,EACoB,KADpB,CAAnB;AAOA,MAAIC,WAAW,GAAG,EAAlB;;AAOA,MAAIJ,eAAJ,EAAqB;AAEjBA,IAAAA,eAAe,CAACK,IAAhB,CAAqBC,GAArB,CAAyB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAEzC,UAAID,OAAO,CAACE,MAAR,CAAeC,KAAf,CAAqB,EAArB,KAA4B,UAAhC,EAA4C;AACxC;AACA;AACA;AACA;AACA;AAEA;AAGA;AACAN,QAAAA,WAAW,CAACO,IAAZ,CAAiBJ,OAAjB;AAKH;AAEJ,KApBD;AAsBH;;AAGD,QAAMK,aAAa,GAAG,MAAM;AACxB,WAAOR,WAAW,CAACE,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvC,YAAMK,IAAI,GAAG,IAAIC,IAAJ,CAASP,OAAO,CAACE,MAAjB,CAAb;AACA,YAAMM,IAAI,GAAGC,MAAM,CAACH,IAAI,CAACI,OAAL,EAAD,CAAN,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAb;AACA,YAAMC,WAAW,GAAGhB,UAAU,CAACU,IAAI,CAACO,QAAL,EAAD,CAA9B;AACA,YAAMC,QAAQ,GAAI,GAAEN,IAAK,IAAGI,WAAY,EAAxC;AAEA,0BACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BE;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,iCACI;AAAK,YAAA,GAAG,EAAC,oEAAT;AAA8E,YAAA,KAAK,EAAC,MAApF;AAA2F,YAAA,GAAG,EAAC;AAA/F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,qBAAKC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACjB,OAAO,CAACkB,IAAR,CAAaC,IAAd,CAAN,GAA4B,MAAvC,CAAL,eAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA,SAAmDlB,KAAnD;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAhBM,CAAP;AAkBH,GAnBD;;AAqBA,sBACI;AAAA,eACKR,eAAe,GAAGY,aAAa,EAAhB,GAAqB,EADzC,eAEI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAvEuBb,O;UACQD,W;;;KADRC,O","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\n\nexport default function Nextday() {\n    const { weatherNextDays } = useSelector(state => state.WeatherReducer)\n\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n\n\n\n\n    let mangWeather = [];\n\n\n\n\n\n\n    if (weatherNextDays) {\n\n        weatherNextDays.list.map((weather, index) => {\n\n            if (weather.dt_txt.slice(11) == \"12:00:00\") {\n                // // PUSH DATE\n                // const DATE = new Date(weather.dt_txt)\n                // const date = String(DATE.getDate()).padStart(2, '0');\n                // const monthLetter = monthNames[DATE.getMonth()]\n                // const dateText = `${date} ${monthLetter}`\n\n                // mangdate.push(dateText)\n\n\n                // PUSH MANG WEATHER\n                mangWeather.push(weather)\n\n\n\n\n            }\n\n        });\n\n    }\n\n\n    const renderNextday = () => {\n        return mangWeather.map((weather, index) => {\n            const DATE = new Date(weather.dt_txt)\n            const date = String(DATE.getDate()).padStart(2, '0');\n            const monthLetter = monthNames[DATE.getMonth()]\n            const dateText = `${date} ${monthLetter}`\n\n            return (\n                <div className=\"item today glass text-center\" key={index}>\n                    <h3 className=\"change-date\">{dateText}</h3>\n                    <h3 className=\"my-4\">\n                        <img src=\"http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png\" width=\"50px\" alt=\"icon\" />\n                    </h3>\n                    <h3 className=\"mb-3\">Temperature</h3>\n                    <h2>{Math.round(Number(weather.main.temp) - 273.15)}<sup>Â°C</sup></h2>\n                </div>\n            )\n        })\n\n    }\n\n    return (\n        <div>\n            {weatherNextDays ? renderNextday() : ''}\n            <div className=\"next-day\" />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}