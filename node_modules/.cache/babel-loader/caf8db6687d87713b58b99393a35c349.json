{"ast":null,"code":"var _jsxFileName = \"/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/Info.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { weatherServices } from \"./../services/WeatherServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  _s();\n\n  let [cityName, setCityName] = useState(\"London\");\n  const dispatch = useDispatch();\n  const {\n    weatherToday\n  } = useSelector(state => state.WeatherReducer);\n  console.log(weatherToday);\n\n  const handleChange = event => {\n    let {\n      value\n    } = event.target;\n    setCityName(cityName = value);\n  };\n\n  useEffect(() => {\n    weatherServices.getWeatherToday(\"london\").then(result => {\n      setCityName(cityName = result.data.name);\n      console.log(result.data.weather[0].main);\n      dispatch({\n        type: \"GET_DATA_TODAY\",\n        weatherToday: result.data\n      });\n    }).catch(error => {\n      console.log(error);\n    }); // weatherServices.getWeatherNextDays(\"london\")\n    //     .then(result => {\n    //         setCityName(cityName = result.data.name)\n    //         dispatch({\n    //             type: \"GET_DATA_NEXT_DAYS\",\n    //             weatherNextDays: result.data\n    //         })\n    //     })\n    //     .catch(error => {\n    //         console.log(error)\n    //     })\n  }, []); // EDIT DATE AND TIME\n\n  const dateName = [\"Sun\", \"Mon\", \"Tue\", \"Web\", \"Thu\", \"Fri\", \"Sat\"];\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const DATE = new Date(weatherToday.dt * 1000);\n  const day = dateName[DATE.getDay()];\n  const month = monthNames[DATE.getMonth()];\n  const date = String(DATE.getDate()).padStart(2, '0');\n  const year = DATE.getFullYear();\n  const hour = String(DATE.getHours()).padStart(2, '0');\n  const minute = String(DATE.getMinutes()).padStart(2, '0');\n  const second = String(DATE.getSeconds()).padStart(2, '0');\n  const outputDate = `${day} ${month} ${date}, ${year} ${hour}:${minute}:${second}`;\n\n  const renderInfor = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3 d-flex align-items-center justify-content-center h-100 w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex align-items-center pb-5 mb-5 position-relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"cityName\",\n            className: \"form-control h-100\",\n            placeholder: \"London\",\n            value: cityName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-search-location position-absolute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date text-muted\",\n          children: outputDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5 pb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"temp  d-flex flex-column align-items-center justify-content-between\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"weather\",\n            children: weatherToday.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"more-info d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"humidity\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-muted mb-5\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-muted mb-5\",\n              children: \"Wind speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: weatherToday !== {} ? renderInfor() : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Info, \"iWcNXNvY0apoG9Mot4rPl2W60jM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/Info.js"],"names":["React","Fragment","useEffect","useState","useDispatch","useSelector","weatherServices","Info","cityName","setCityName","dispatch","weatherToday","state","WeatherReducer","console","log","handleChange","event","value","target","getWeatherToday","then","result","data","name","weather","main","type","catch","error","dateName","monthNames","DATE","Date","dt","day","getDay","month","getMonth","date","String","getDate","padStart","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","outputDate","renderInfor"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { weatherServices} from \"./../services/WeatherServices\"\n\nexport default function Info() {\n\n    let [cityName, setCityName] = useState (\"London\")\n\n    const dispatch = useDispatch();\n\n    const {weatherToday} = useSelector(state => state.WeatherReducer)\n\n    console.log(weatherToday)\n\n\n    const handleChange = (event) => {\n        let {value} = event.target;\n        setCityName(cityName = value)\n    }\n\n    useEffect(() => {\n        weatherServices.getWeatherToday(\"london\")\n        .then(result => {\n            setCityName(cityName = result.data.name)\n            console.log(result.data.weather[0].main)\n            dispatch({\n                type: \"GET_DATA_TODAY\",\n                weatherToday: result.data\n            })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n\n        // weatherServices.getWeatherNextDays(\"london\")\n        //     .then(result => {\n        //         setCityName(cityName = result.data.name)\n        //         dispatch({\n        //             type: \"GET_DATA_NEXT_DAYS\",\n        //             weatherNextDays: result.data\n        //         })\n        //     })\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n\n    },[])\n\n\n\n    // EDIT DATE AND TIME\n\n    const dateName = [\"Sun\", \"Mon\", \"Tue\", \"Web\", \"Thu\", \"Fri\", \"Sat\"]\n\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n\n    const DATE = new Date(weatherToday.dt * 1000)\n    const day = dateName[DATE.getDay()];\n    const month = monthNames[DATE.getMonth()];\n    const date = String(DATE.getDate()).padStart(2, '0');\n    const year = DATE.getFullYear();\n    const hour = String(DATE.getHours()).padStart(2, '0');\n    const minute = String(DATE.getMinutes()).padStart(2, '0');\n    const second = String(DATE.getSeconds()).padStart(2, '0');\n\n    const outputDate = `${day} ${month} ${date}, ${year} ${hour}:${minute}:${second}`\n\n\n    const renderInfor = () => {\n        return (\n            <div className=\"col-3 d-flex align-items-center justify-content-center h-100 w-100\">\n                <div className=\"text-center\">\n                    <div className=\"form-group d-flex align-items-center pb-5 mb-5 position-relative\">\n                        <input name= \"cityName\" className=\"form-control h-100\" placeholder=\"London\" value={cityName} onChange={handleChange}/>\n                        <i className=\"fas fa-search-location position-absolute\"/>\n                    </div>\n                    <div className=\"date text-muted\">{outputDate}</div>\n                    <div className=\"mb-5 pb-5\">\n                        <h1 className=\"temp  d-flex flex-column align-items-center justify-content-between\" />\n                        <h1 className=\"weather\">{weatherToday.weather[0].main}</h1>\n                    </div>\n                    <div className=\"more-info d-flex justify-content-between\">\n                        <div className=\"humidity\">\n                            <h3 className=\"text-muted mb-5\">Humidity</h3>\n                            {/* <h2 className=\"humi\">{weatherToday.main.humidity}%</h2> */}\n                        </div>\n                        <div className=\"wind\">\n                            <h3 className=\"text-muted mb-5\">Wind speed</h3>\n                            {/* <h2 className=\"windSpeed\">{Math.round(weatherToday.wind.speed * 3.6)}km/h</h2> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n    return (\n        <Fragment>\n            {weatherToday !== {} ? renderInfor() : ''}\n        </Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}