{"ast":null,"code":"var _jsxFileName = \"/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/ChartTemperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ApexCharts from 'apexcharts';\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartTemperature() {\n  _s();\n\n  const {\n    weatherNextDays\n  } = useSelector(state => state.WeatherReducer);\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let mangdate = [];\n  let mangWeather = [];\n  let mangTemp = [];\n  console.log(weatherNextDays);\n\n  if (weatherNextDays) {\n    console.log(weatherNextDays); // weatherNextDays.map((weather,index) => {\n    //     if (weather.dt_txt.slice(11) == \"12:00:00\") {\n    //       // PUSH DATE\n    //       const DATE = new Date(weather.dt_txt)\n    //       const date = String(DATE.getDate()).padStart(2, '0');\n    //       const monthLetter = monthNames[DATE.getMonth()]\n    //       const dateText = `${date} ${monthLetter}`\n    //       mangdate.push(dateText)\n    //       // PUSH MANG WEATHER\n    //       mangWeather.push(weather)\n    //       // PUSH TEMP VALUE\n    //       mangTemp.push(Math.round(Number(weather.main.temp) - 273.15))\n    //     }\n    //   });\n  } // if (weatherNextDays) {\n  //     var series = {\n  //         temperature: {\n  //             value: mangTemp,\n  //             dates: mangdate\n  //         },\n  //     }\n  //     var options = {\n  //         series: [{\n  //             name: \"TEMPERATURE\",\n  //             data: series.temperature.value\n  //         }],\n  //         chart: {\n  //             type: 'area',\n  //             height: 350,\n  //             zoom: {\n  //                 enabled: true\n  //             }\n  //         },\n  //         dataLabels: {\n  //             enabled: true\n  //         },\n  //         stroke: {\n  //             curve: 'smooth'\n  //         },\n  //         title: {\n  //             text: 'Unit: °C',\n  //             align: 'left'\n  //         },\n  //         subtitle: {\n  //             text: 'Comparison data at 12:00:00 on each day',\n  //             align: 'left'\n  //         },\n  //         labels: series.temperature.dates,\n  //         yaxis: {\n  //             opposite: true\n  //         },\n  //         legend: {\n  //             horizontalAlign: 'right'\n  //         }\n  //     };\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChartTemperature, \"eX97CGFtmZBKJI38g7WNDwThAVg=\", false, function () {\n  return [useSelector];\n});\n\n_c = ChartTemperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartTemperature\");","map":{"version":3,"sources":["/Users/lehuynhqui/Documents/INTERN/CyberSoft/weather-react/src/components/ChartTemperature.js"],"names":["React","Fragment","useEffect","useSelector","ApexCharts","Chart","ChartTemperature","weatherNextDays","state","WeatherReducer","monthNames","mangdate","mangWeather","mangTemp","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAEvC,QAAM;AAAEC,IAAAA;AAAF,MAAsBJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAAvC;AAIA,QAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EACrB,KADqB,EACd,KADc,EACP,KADO,EACA,KADA,EACO,KADP,EACc,KADd,CAAnB;AAOA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ;;AAGA,MAAIA,eAAJ,EAAqB;AACrBO,IAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ,EADqB,CAGjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AAEH,GA1CsC,CA8CvC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,sBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAtGuBD,gB;UAEQH,W;;;KAFRG,gB","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport ApexCharts from 'apexcharts';\nimport Chart from \"react-apexcharts\";\n\nexport default function ChartTemperature() {\n\n    const { weatherNextDays } = useSelector(state => state.WeatherReducer)\n\n\n\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n  \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n        \n\n\n\n    let mangdate = [];\n    let mangWeather = [];\n    let mangTemp = [];\n    console.log(weatherNextDays)\n\n\n    if (weatherNextDays) {\n    console.log(weatherNextDays)\n\n        // weatherNextDays.map((weather,index) => {\n        \n        //     if (weather.dt_txt.slice(11) == \"12:00:00\") {\n        //       // PUSH DATE\n        //       const DATE = new Date(weather.dt_txt)\n        //       const date = String(DATE.getDate()).padStart(2, '0');\n        //       const monthLetter = monthNames[DATE.getMonth()]\n        //       const dateText = `${date} ${monthLetter}`\n        //       mangdate.push(dateText)\n    \n    \n        //       // PUSH MANG WEATHER\n        //       mangWeather.push(weather)\n    \n        //       // PUSH TEMP VALUE\n        //       mangTemp.push(Math.round(Number(weather.main.temp) - 273.15))\n        //     }\n    \n        //   });\n    \n    }\n\n\n\n    // if (weatherNextDays) {\n    //     var series = {\n    //         temperature: {\n    //             value: mangTemp,\n    //             dates: mangdate\n    //         },\n    //     }\n    \n    //     var options = {\n    //         series: [{\n    //             name: \"TEMPERATURE\",\n    //             data: series.temperature.value\n    //         }],\n    //         chart: {\n    //             type: 'area',\n    //             height: 350,\n    //             zoom: {\n    //                 enabled: true\n    //             }\n    //         },\n    //         dataLabels: {\n    //             enabled: true\n    //         },\n    //         stroke: {\n    //             curve: 'smooth'\n    //         },\n    //         title: {\n    //             text: 'Unit: °C',\n    //             align: 'left'\n    //         },\n    //         subtitle: {\n    //             text: 'Comparison data at 12:00:00 on each day',\n    //             align: 'left'\n    //         },\n    //         labels: series.temperature.dates,\n    \n    //         yaxis: {\n    //             opposite: true\n    //         },\n    //         legend: {\n    //             horizontalAlign: 'right'\n    //         }\n    //     };\n    // }\n\n\n\n    return (\n        <Fragment>\n            {/* { weatherNextDays ? <Chart \n                options={options}\n                series={series}\n            /> : \"\"} */}\n            {/* {renderChartTemp(mangTemp, mangdate)} */}\n        </Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}